{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{169:function(t,s,a){\"use strict\";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"content\"},[a(\"h1\",{attrs:{id:\"интересные-пакеты\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#интересные-пакеты\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Интересные пакеты\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"strong\",[t._v(\"Colors\")]),t._v(\" - для вывода текста в консоль разными цветами\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"Optimist\")]),t._v(\" - перехватчик ключей с консоли\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"CrossRoads\")]),t._v(\" - маршрутизатор\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"http-proxy\")]),t._v(\" - Самым простым использованием есть создание автономного прокси-сервера,которий слушает входящие запросы на одном порту и перенапрвляет их веб-серверу, слушающему другой порт\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"Pug\")]),t._v(\" - шаблонизатор (Jade)\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"Nunjucks\")]),t._v(\" - шаблонизатор похож на Blade(Laravel)\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"Stylus\")]),t._v(\" - шаблонизатор для CSS-стилей как Pug(Jade)\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"node-validator\")]),t._v(\" - проверка данных на валидность(почта и т.д.)\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"Forever\")]),t._v(\" - Перезапускает приложение после падения\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"Faker\")]),t._v(\" - генерация фальшывих имен и т.д.\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"Formidable\")]),t._v(\" - для загрузки файлов(картинок)\")]),t._v(\" \"),a(\"li\",[a(\"strong\",[t._v(\"Busboy\")]),t._v(\" - для загрузки файлов(картинок)\")])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"forever\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#forever\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Forever\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-cmd extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"// cmd\\nforever start -a -l forever.log -o out.log -e err.log app.js\\n\")])])]),a(\"h5\",{attrs:{id:\"colors\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#colors\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Colors\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" colors \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"require\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'colors'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// colors\")]),t._v(\"\\nconsole\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'RAINBOW SIX XSIEGE'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"rainbow\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// colorize it\")]),t._v(\"\\nconsole\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'ABRA_CADABRA'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"zebra\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"      \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// colorize it\")]),t._v(\"\\n\")])])]),a(\"h5\",{attrs:{id:\"optimist\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#optimist\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Optimist\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" argv \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"require\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'optimist'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"argv\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// optimist\")]),t._v(\"\\nconsole\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"argv\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"o \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v('\" - \"')]),t._v(\" \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" argv\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"t\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// when start app - type : node app -o 2 -t 4\")]),t._v(\"\\nconsole\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"argv\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"one \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" argv\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"two\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"      \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// when start app - type : node app --one 2 --two 4\")]),t._v(\"\\n\")])])])])}],!1,null,null,null);o.options.__file=\"int-packages.md\";s.default=o.exports}}]);","extractedComments":[]}